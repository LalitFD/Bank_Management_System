/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Login;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

public class Withdraw1 extends javax.swing.JFrame {

   private String loggedInUsername;  
  
    public Withdraw1(String username) {
        this.loggedInUsername=username;
        initComponents();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        amountTextField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(206, 233, 246));
        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("                                          Withdrawn Money");
        jLabel1.setBorder(new javax.swing.border.MatteBorder(null));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel2.setText("How Much Money Do You Want To Withdrawn ?");

        amountTextField.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        amountTextField.setBorder(new javax.swing.border.MatteBorder(null));

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Withdrawn");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(206, 233, 246));
        jButton3.setIcon(new javax.swing.ImageIcon("C:\\Users\\Lenovo\\Documents\\bb.png")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(239, 239, 239))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(amountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton3)))
                .addContainerGap(183, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addGap(48, 48, 48)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(amountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(142, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        String balance = amountTextField.getText();

        if (balance.isEmpty()) {
            JOptionPane.showMessageDialog(this, "please enter an amount to withdraw");
            return;
        }
        try {
            double amount = Double.parseDouble(balance);
            if (amount <= 0) {
                JOptionPane.showMessageDialog(this, "please enter an positive amount");
                return;
            }
            if (updateBalance(amount,loggedInUsername)) {
                miniwith(amount,loggedInUsername);
                JOptionPane.showMessageDialog(null, "withdraw successful!");
                this.dispose();
                new Afterlogin1(loggedInUsername).setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "withdraw failed. Please try again.");
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "withdraw failed. Please try again.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    
    
     public boolean updateBalance(double amount, String loggedInUsername)  {

         if (loggedInUsername == null || loggedInUsername.isEmpty()) {
        JOptionPane.showMessageDialog(null, "❌ Error: User is not logged in!");
        return false;
    }

          String str = "SELECT balance FROM users WHERE username = ?";
try{
    
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/BMSG", "root", "root");
        PreparedStatement pst = con.prepareStatement(str);
        pst.setString(1,loggedInUsername );
//        pst.executeUpdate();
        ResultSet rs = pst.executeQuery();

        double bal1 = 0;
       if(rs.next()){
           bal1=rs.getDouble(1);
       }else{
           JOptionPane.showMessageDialog(null, "User not found!");
           return false;
       }
        
        if(bal1<amount){
            JOptionPane.showMessageDialog(null, "insuffiecient balance ! Transaction failed");
           return false;
        }
        
        double updatedBalance = bal1 - amount;
        
        String str1 = "UPDATE users SET balance = ? WHERE username = ?";
		PreparedStatement pst1 = con.prepareStatement(str1);
		pst1.setDouble(1, updatedBalance);
		pst1.setString(2, loggedInUsername);
		int rowsAffected = pst1.executeUpdate();
if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(this, "✅ Withdrawal successful! New balance: " + updatedBalance);
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "❌ Withdrawal failed! Please try again.");
            return false;
        }
}catch(Exception e){
    e.printStackTrace();
    return false;
    }
}   
     
     
      public void miniwith(double amount, String loggedInUsername) {
    String accnumber = null;
    String query = "SELECT account_number FROM users WHERE username = ?";

    try (Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/BMSG", "root", "root");
         PreparedStatement pst = con.prepareStatement(query)) {
        
        pst.setString(1, loggedInUsername);
        ResultSet rs = pst.executeQuery();
        
        if (rs.next()) {
            accnumber = rs.getString("account_number");
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }

    if (accnumber == null) {
        System.out.println("Error: No account number found for username " + loggedInUsername);
        return;
    }

    // Correct SQL query using PreparedStatement
    String str = "INSERT INTO ministatement (withdrawl, username, account_number) VALUES (?, ?, ?)";

    try (Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/BMSG", "root", "root");
         PreparedStatement pst = con.prepareStatement(str)) {

        pst.setDouble(1, amount);
        pst.setString(2, loggedInUsername);
        pst.setString(3, accnumber);
        
        int rowsAffected = pst.executeUpdate();
        
        if (rowsAffected > 0) {
            System.out.println("✅ withdraw recorded successfully in ministatement.");
        } else {
            System.out.println("❌ Failed to record withdraw in ministatement.");
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
       String username=null;
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Withdraw1(username).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amountTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
